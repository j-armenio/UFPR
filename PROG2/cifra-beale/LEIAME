João Armênio Silveira GRR20211792

    Segue o projeto onde foi feita a criação de um programa, que, de acordo com a codificação, cifra de Baele, tem as seguintes funcionalidades:
        - Cifrar um arquivo de texto.
        - Decifrar um arquivo de texto com base no livro Cifra.
        - Decifrar um arquivo de texto com base no arquivo de chaves.

    O projeto está inteiro contido na pasta "src", onde se encontram os seguintes arquivos:
        - beale.c: arquivo principal do programa, onde se encontra a função main contendo apenas as principais chamadas de funções.

        - liblist.c: arquivo onde se encontram as funções de manipulação de listas.
        - liblist.h: arquivo onde se encontram as declarações das funções de manipulação de listas.

        - libutil.c: arquivo onde se encontram as funções de manipulação de strings.
        - libutil.h: arquivo onde se encontram as declarações das funções de manipulação de strings.

        - libcrypto.c: arquivo onde se encontram as funções de cifragem e decifragem.
        - libcrypto.h: arquivo onde se encontram as declarações das funções de cifragem e decifragem.


    Falando mais especificamente sobre cada uma das bibliotecas implementadas:
        - liblist.c: Foi implementada uma lista encadeada chamada de listLetters, composta de nodeLetter, nodos que dentro de si armazenam uma letra, o número de repetições que essa letra terá na lista (não há dois nodos da mesma letra), e dois ponteiros, um para o próximo nodo e outro que aponta para uma segunda lista, chamada de positions. Essa segunda lista encadeada contém nodos chamados de nodePosition, que contém um ponteiro para seu próximo nodo e um int de position, que será ultilizado para armazenar uma única posição de uma palavra do LivroCifra.
	A implementação das funções segue a lógica das duas listas encadeadas, onde há funções separadas para a inserção de um nodo e de uma letra, cada um em sua respectiva lista. Além disso há funções como printList, que imprime a lista no terminal e printListToFile, que já imprime diretamente em um arquivo.

	- libutil.c: Essa biblioteca contém funções variadas de utilidade para o programa. 
	Ela declara uma estrutura que contém todas as flags necessárias para o programa reconhecer qual comando o usuário deseja ultilizar, e com a função handleEntries, todas essas flags recebem seus devidos valores pelo argv. Essa estrutura também armazena os caminhos para os arquivos que são recebidos na entrada padrão.
	Também contém as funções que recebem os arquivos de referência para codificação, o keysFileToList, que lê o arquivo de chaves e passa seus valores para a lista, e o cipherBookToList, que enquanto lê o livro cifra, vai armazenando as primeiras letras de cada palavra na lista.

	- libcrypto.c: Contém as chamadas e implementação das funções relacionadas aos processos de codificar e decodificar um arquivo.
	Codificar: A função recebe a mensagem original, lê um caractere e o procura na lista, então pega uma posição aleatória da lista de posições da letra escolhida. Caso a letra não esteja na lista, ou seja, ela não estava nem no Livro Cifra ou no Arquivo de Chaves, ela é inserida na última posição da lista e recebe o valor da maior posição + 1. Espaços em branco são impressos como '-1' e quebras de linhas como '-2'. Outra particularidade é o fato do programa funcionar com ou sem a opção de -c, que é a opção de gerar um arquivo de chaves ao codificar uma mensagem. 
	Decodificar: A função recebe a mensagem codificada, e le a linha e coloca a primeira palavra em um token. Esse token então, que é um número, é buscado na lista, que retorna uma posiçao que pertence a algum nodo de letra. Caso a posição não esteja contida na lista, é impresso um 'X' no lugar, para sinalizar a falta de tradução.
	Foram feitas duas funções, uma para cada caso de decoficação. A decryptMsgWithKeysFile e a decryptMsgWithCipherBook, porém a única diferença entre elas é o modo que elas recebem a informação e informação de referência para a lista, uma recebe do arquivo de chaves e a outra do Livro Cifra.
